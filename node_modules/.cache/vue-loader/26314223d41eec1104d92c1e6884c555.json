{"remainingRequest":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmarron/Documents/GitHub/InfoCoin_v00/src/views/Detalle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/src/views/Detalle.vue","mtime":1575457324915},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAnQC9hcGknCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnRGV0YWxsZScsCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYXNzZXQ6IHt9LAoJCQloaXN0b3J5IDogW10KICAgICAgICB9CiAgICB9LAoKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRDb2luKCkKICAgIH0sCgoJY29tcHV0ZWQ6IHsKCQltaW4oKXsKCQkJcmV0dXJuIE1hdGgubWluICgKCQkJCS4uLnRoaXMuaGlzdG9yeS5tYXAoaCA9PiBwYXJzZUZsb2F0KGgucHJpY2VVc2QpLnRvRml4ZWQoMikpCgkJCSkKCQl9LAoJCW1heCgpewoJCQlyZXR1cm4gTWF0aC5tYXggKAoJCQkJLi4udGhpcy5oaXN0b3J5Lm1hcChoID0+IHBhcnNlRmxvYXQoaC5wcmljZVVzZCkudG9GaXhlZCgyKSkKCQkJKQoJCX0sCgkJYXZnKCl7CgkJCXJldHVybiBNYXRoLmFicyAoCgkJCQkuLi50aGlzLmhpc3RvcnkubWFwKGggPT4gcGFyc2VGbG9hdChoLnByaWNlVXNkKS50b0ZpeGVkKDIpKQoJCQkpCgkJfQoJfSwKCiAgICBtZXRob2RzOiB7CgkJZ2V0Q29pbigpIHsKCQkJY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKCQkJUHJvbWlzZS5hbGwoW2FwaS5nZXRBc3NldChpZCksIGFwaS5nZXRBc3NldEhpc3RvcnkoaWQpXSkKCQkJLnRoZW4oKFthc3NldCwgaGlzdG9yeV0pID0+IHsKCQkJCXRoaXMuYXNzZXQgPSBhc3NldAoJCQkJdGhpcy5oaXN0b3J5ID0gaGlzdG9yeQoJCQl9CgkJCSkKCQl9Cgl9LAoKfQo="},{"version":3,"sources":["Detalle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Detalle.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <template v-if=\"asset.id\">\n            <div class=\"coin_holder\">\n                <div class=\"image\">\n                    <ul>\n                        <li class=\"coinlogo\">\n                            <img width=\"40px\" :src=\"`https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\">         \n                        </li>\n                        <li>\n                            <p>\n                                <b>Rank</b>\n                                #{{asset.rank}}\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Name</b>\n                                {{asset.name}}\n                                <span>\n                                    {{asset.symbol}}\n                                </span>\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Price</b>\n                                {{asset.priceUsd|dollar}}\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Percent</b>\n                                {{asset.changePercent24Hr|percent}}\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Minimum Price</b>\n                                {{min|dollar}}\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Maximum Price</b>\n                                {{max|dollar}}\n                            </p>\n                        </li>\n                        <li>\n                            <p>\n                                <b>Average Price</b>\n                                {{avg|dollar}}\n                            </p>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"chart\">\n                    <line-chart class=\"my-10\"\n                        :colors=\"['navy']\"\n                        :min=\"min\"\n                        :max=\"max\"\n                        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n                    />\n                </div>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport api from '@/api'\n\nexport default {\n    name: 'Detalle',\n    data(){\n        return {\n            asset: {},\n\t\t\thistory : []\n        }\n    },\n\n    created() {\n        this.getCoin()\n    },\n\n\tcomputed: {\n\t\tmin(){\n\t\t\treturn Math.min (\n\t\t\t\t...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n\t\t\t)\n\t\t},\n\t\tmax(){\n\t\t\treturn Math.max (\n\t\t\t\t...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n\t\t\t)\n\t\t},\n\t\tavg(){\n\t\t\treturn Math.abs (\n\t\t\t\t...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n\t\t\t)\n\t\t}\n\t},\n\n    methods: {\n\t\tgetCoin() {\n\t\t\tconst id = this.$route.params.id\n\t\t\tPromise.all([api.getAsset(id), api.getAssetHistory(id)])\n\t\t\t.then(([asset, history]) => {\n\t\t\t\tthis.asset = asset\n\t\t\t\tthis.history = history\n\t\t\t}\n\t\t\t)\n\t\t}\n\t},\n\n}\n</script>\n\n<style>\n\n</style>"]}]}