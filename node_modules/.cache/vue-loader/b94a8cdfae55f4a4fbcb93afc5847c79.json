{"remainingRequest":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmarron/Documents/GitHub/InfoCoin_v00/src/components/Tabla.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/src/components/Tabla.vue","mtime":1575455849653},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmarron/Documents/GitHub/InfoCoin_v00/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlZHsKICBjb2xvcjogI2Y4ODAyMDsKfQouZ3JlZW57CiAgY29sb3I6ICM5MWJkM2E7Cn0K"},{"version":3,"sources":["Tabla.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA","file":"Tabla.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"logs\">\n      <p class=\"log_info\">\n        Crypto-coin current values (connected to Coincap API).<br>\n        <b>Click on each coin</b> to see more information.\n      </p>\n      <div class=\"search\">\n        <input type=\"text\" placeholder=\"Search...\" v-model=\"filter\">\n      </div>\n      <div class=\"coinLog\" v-for=\"a in filteredAssets\" :key=\"a.id\">\n          <img width=\"40px\" :src=\"`https://static.coincap.io/assets/icons/${a.symbol.toLowerCase()}@2x.png`\">\n          <p class=\"info\">\n            <span>\n              Rank:\n            </span>\n            #{{ a.rank }}\n          </p>\n            <p class=\"info\">\n              <span>\n                Name:\n              </span>\n                {{a.name}}\n            </p>\n          <p class=\"info\">\n            {{a.symbol}}\n          </p>\n          <p class=\"info\">\n            <span>\n              Price\n            </span>\n            {{a.priceUsd|dollar}}\n          </p>\n          <p class=\"info\">\n            <span>\n              Market\n            </span>\n            {{a.marketCapUsd|dollar}}\n          </p>\n          <p class=\"info\"\n          :class=\"a.changePercent24Hr.includes('-') ? 'red' : 'green'\">\n            {{a.changePercent24Hr|percent}}\n          </p>\n          <p>\n            <router-link class=\"rlink\" :to=\"{ name: 'detalle', params: {id: a.id}}\">\n              <button class=\"btn_link\">\n                Details\n              </button>\n            </router-link>\n          </p>\n      </div>\n      <div class=\"btn_log\">\n        <button>\n          You don't see your coin?\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Tabla',\n\tdata() {\n    return {\n      filter: ''\n    }\n  },\n  computed : {\n    filteredAssets() {\n      if(!this.filter) {return this.assets}\n      return this.assets.filter(a =>\n       a.symbol.toLowerCase().includes(this.filter.toLowerCase()) ||\n       a.name.toLowerCase().includes(this.filter.toLowerCase())\n       )\n    }\n  },\n\tprops: {\n\t\tassets: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n  .red{\n    color: #f88020;\n  }\n  .green{\n    color: #91bd3a;\n  }\n</style>\n"]}]}